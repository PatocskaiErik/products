{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAB_KEY_CODE = 9;\n/* istanbul ignore next */\n\n/**\n * A nifty little class that maintains event handlers to add a class to the container element\n * when entering \"mouse mode\" (on a `mousedown` event) and remove it when entering \"keyboard mode\"\n * (on a `tab` key `keydown` event).\n */\n\nvar InteractionModeEngine =\n/** @class */\nfunction () {\n  function InteractionModeEngine(container, className) {\n    var _this = this;\n\n    this.container = container;\n    this.className = className;\n    this.isRunning = false;\n\n    this.handleKeyDown = function (e) {\n      // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n      // eslint-disable-next-line deprecation/deprecation\n      if (e.which === TAB_KEY_CODE) {\n        _this.reset();\n\n        _this.container.addEventListener(\"mousedown\", _this.handleMouseDown);\n      }\n    };\n\n    this.handleMouseDown = function () {\n      _this.reset();\n\n      _this.container.classList.add(_this.className); // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\n\n\n      _this.container.addEventListener(\"keydown\", _this.handleKeyDown);\n    };\n  }\n  /** Returns whether the engine is currently running. */\n\n\n  InteractionModeEngine.prototype.isActive = function () {\n    return this.isRunning;\n  };\n  /** Enable behavior which applies the given className when in mouse mode. */\n\n\n  InteractionModeEngine.prototype.start = function () {\n    this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n    this.isRunning = true;\n  };\n  /** Disable interaction mode behavior and remove className from container. */\n\n\n  InteractionModeEngine.prototype.stop = function () {\n    this.reset();\n    this.isRunning = false;\n  };\n\n  InteractionModeEngine.prototype.reset = function () {\n    this.container.classList.remove(this.className); // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\n\n    this.container.removeEventListener(\"keydown\", this.handleKeyDown);\n    this.container.removeEventListener(\"mousedown\", this.handleMouseDown);\n  };\n\n  return InteractionModeEngine;\n}();\n\nexport { InteractionModeEngine };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,IAAMA,YAAY,GAAG,CAArB;AAEA;;AAEA;;;;;;AAKA;AAAA;AAAA;AAGI,iCAAoBC,SAApB,EAAgDC,SAAhD,EAAiE;AAAjE;;AAAoB;AAA4B;AAFxC,qBAAY,KAAZ;;AA4BA,yBAAgB,UAACC,CAAD,EAAiB;AACrC;AACA;AACA,UAAIA,CAAC,CAACC,KAAF,KAAYJ,YAAhB,EAA8B;AAC1BK,aAAI,CAACC,KAAL;;AACAD,aAAI,CAACJ,SAAL,CAAeM,gBAAf,CAAgC,WAAhC,EAA6CF,KAAI,CAACG,eAAlD;AACH;AACJ,KAPO;;AASA,2BAAkB;AACtBH,WAAI,CAACC,KAAL;;AACAD,WAAI,CAACJ,SAAL,CAAeQ,SAAf,CAAyBC,GAAzB,CAA6BL,KAAI,CAACH,SAAlC,EAFsB,CAGtB;;;AACAG,WAAI,CAACJ,SAAL,CAAeM,gBAAf,CAAgC,SAAhC,EAA2CF,KAAI,CAACM,aAAhD;AACH,KALO;AAnC6D;AAErE;;;AACOC,6CAAP;AACI,WAAO,KAAKC,SAAZ;AACH,GAFM;AAIP;;;AACOD,0CAAP;AACI,SAAKX,SAAL,CAAeM,gBAAf,CAAgC,WAAhC,EAA6C,KAAKC,eAAlD;AACA,SAAKK,SAAL,GAAiB,IAAjB;AACH,GAHM;AAKP;;;AACOD,yCAAP;AACI,SAAKN,KAAL;AACA,SAAKO,SAAL,GAAiB,KAAjB;AACH,GAHM;;AAKCD,0CAAR;AACI,SAAKX,SAAL,CAAeQ,SAAf,CAAyBK,MAAzB,CAAgC,KAAKZ,SAArC,EADJ,CAEI;;AACA,SAAKD,SAAL,CAAec,mBAAf,CAAmC,SAAnC,EAA8C,KAAKJ,aAAnD;AACA,SAAKV,SAAL,CAAec,mBAAf,CAAmC,WAAnC,EAAgD,KAAKP,eAArD;AACH,GALO;;AAsBZ;AAAC,CA5CD","names":["TAB_KEY_CODE","container","className","e","which","_this","reset","addEventListener","handleMouseDown","classList","add","handleKeyDown","InteractionModeEngine","isRunning","remove","removeEventListener"],"sources":["/Users/patocskaierik/Desktop/product/node_modules/@blueprintjs/core/src/common/interactionMode.ts"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst TAB_KEY_CODE = 9;\n\n/* istanbul ignore next */\n\n/**\n * A nifty little class that maintains event handlers to add a class to the container element\n * when entering \"mouse mode\" (on a `mousedown` event) and remove it when entering \"keyboard mode\"\n * (on a `tab` key `keydown` event).\n */\nexport class InteractionModeEngine {\n    private isRunning = false;\n\n    constructor(private container: Element, private className: string) {}\n\n    /** Returns whether the engine is currently running. */\n    public isActive() {\n        return this.isRunning;\n    }\n\n    /** Enable behavior which applies the given className when in mouse mode. */\n    public start() {\n        this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n        this.isRunning = true;\n    }\n\n    /** Disable interaction mode behavior and remove className from container. */\n    public stop() {\n        this.reset();\n        this.isRunning = false;\n    }\n\n    private reset() {\n        this.container.classList.remove(this.className);\n        // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\n        this.container.removeEventListener(\"keydown\", this.handleKeyDown as EventListener);\n        this.container.removeEventListener(\"mousedown\", this.handleMouseDown);\n    }\n\n    private handleKeyDown = (e: KeyboardEvent) => {\n        // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n        // eslint-disable-next-line deprecation/deprecation\n        if (e.which === TAB_KEY_CODE) {\n            this.reset();\n            this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n        }\n    };\n\n    private handleMouseDown = () => {\n        this.reset();\n        this.container.classList.add(this.className);\n        // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\n        this.container.addEventListener(\"keydown\", this.handleKeyDown as EventListener);\n    };\n}\n"]},"metadata":{},"sourceType":"module"}