{"ast":null,"code":"import axios from \"axios\";\nexport const fetchProducts = async setProducts => {\n  const url = \"/api/products\";\n\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    setProducts(data);\n  } catch (error) {\n    console.warn(\"Failed to load products\");\n    throw Error(\"Nem sikerült betölteni a termékek listáját!\");\n  }\n};\nexport const addProduct = async (newProduct, setSuccess, setError) => {\n  const url = \"/api/products\";\n\n  try {\n    const response = await axios.post(url, newProduct);\n\n    if (response.status === 200) {\n      setSuccess(true);\n      window.location.href(\"/\");\n    }\n  } catch (error) {\n    setError(true);\n    console.log(error);\n  }\n};\nexport const fetchProductById = async (setProduct, id) => {\n  const url = \"/api/products\" + \"/\" + id;\n\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    setProduct(data);\n  } catch (error) {\n    console.warn(\"Failed to load product\");\n  }\n};\nexport const editProduct = async (product, id, setEditSuccess, setError) => {\n  const url = \"/api/products\" + \"/\" + id;\n\n  try {\n    const response = await axios.put(url, product);\n\n    if (response.status === 200) {\n      setEditSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\nexport const deleteProductById = async (id, setDeleteSuccess, setError) => {\n  const url = \"/api/products\" + \"/\" + id;\n\n  try {\n    const response = await axios.delete(url);\n\n    if (response.status === 200) {\n      setDeleteSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};","map":{"version":3,"sources":["/Users/patocskaierik/Desktop/product/src/Service/Service.js"],"names":["axios","fetchProducts","setProducts","url","response","get","data","error","console","warn","Error","addProduct","newProduct","setSuccess","setError","post","status","window","location","href","log","fetchProductById","setProduct","id","editProduct","product","setEditSuccess","put","deleteProductById","setDeleteSuccess","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,WAAP,IAAuB;AAClD,QAAMC,GAAG,GAAG,eAAZ;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,CAAvB;AACA,UAAMG,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACAJ,IAAAA,WAAW,CAACI,IAAD,CAAX;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,IAAR,CAAa,yBAAb;AACA,UAAMC,KAAK,CAAC,6CAAD,CAAX;AACD;AACF,CAVM;AAYP,OAAO,MAAMC,UAAU,GAAG,OAAOC,UAAP,EAAmBC,UAAnB,EAA+BC,QAA/B,KAA4C;AACpE,QAAMX,GAAG,GAAG,eAAZ;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACe,IAAN,CAAWZ,GAAX,EAAgBS,UAAhB,CAAvB;;AACA,QAAIR,QAAQ,CAACY,MAAT,KAAoB,GAAxB,EAA6B;AAC3BH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqB,GAArB;AACD;AACF,GAND,CAME,OAAOZ,KAAP,EAAc;AACdO,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAN,IAAAA,OAAO,CAACY,GAAR,CAAYb,KAAZ;AACD;AACF,CAZM;AAcP,OAAO,MAAMc,gBAAgB,GAAG,OAAOC,UAAP,EAAmBC,EAAnB,KAA0B;AACxD,QAAMpB,GAAG,GAAG,kBAAkB,GAAlB,GAAwBoB,EAApC;;AACA,MAAI;AACF,UAAMnB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,CAAvB;AACA,UAAMG,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACAgB,IAAAA,UAAU,CAAChB,IAAD,CAAV;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,IAAR,CAAa,wBAAb;AACD;AACF,CATM;AAWP,OAAO,MAAMe,WAAW,GAAG,OAAOC,OAAP,EAAgBF,EAAhB,EAAoBG,cAApB,EAAoCZ,QAApC,KAAiD;AAC1E,QAAMX,GAAG,GAAG,kBAAkB,GAAlB,GAAwBoB,EAApC;;AACA,MAAI;AACF,UAAMnB,QAAQ,GAAG,MAAMJ,KAAK,CAAC2B,GAAN,CAAUxB,GAAV,EAAesB,OAAf,CAAvB;;AACA,QAAIrB,QAAQ,CAACY,MAAT,KAAoB,GAAxB,EAA6B;AAC3BU,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GALD,CAKE,OAAOnB,KAAP,EAAc;AACdO,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,CAVM;AAYP,OAAO,MAAMc,iBAAiB,GAAG,OAAOL,EAAP,EAAWM,gBAAX,EAA6Bf,QAA7B,KAA0C;AACzE,QAAMX,GAAG,GAAG,kBAAkB,GAAlB,GAAwBoB,EAApC;;AACA,MAAI;AACF,UAAMnB,QAAQ,GAAG,MAAMJ,KAAK,CAAC8B,MAAN,CAAa3B,GAAb,CAAvB;;AACA,QAAIC,QAAQ,CAACY,MAAT,KAAoB,GAAxB,EAA6B;AAC3Ba,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AACF,GALD,CAKE,OAAOtB,KAAP,EAAc;AACdO,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,CAVM","sourcesContent":["import axios from \"axios\";\n\nexport const fetchProducts = async (setProducts) => {\n  const url = \"/api/products\";\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    setProducts(data);\n  } catch (error) {\n    console.warn(\"Failed to load products\");\n    throw Error(\"Nem sikerült betölteni a termékek listáját!\");\n  }\n};\n\nexport const addProduct = async (newProduct, setSuccess, setError) => {\n  const url = \"/api/products\";\n  try {\n    const response = await axios.post(url, newProduct);\n    if (response.status === 200) {\n      setSuccess(true);\n      window.location.href(\"/\");\n    }\n  } catch (error) {\n    setError(true);\n    console.log(error);\n  }\n};\n\nexport const fetchProductById = async (setProduct, id) => {\n  const url = \"/api/products\" + \"/\" + id;\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    setProduct(data);\n  } catch (error) {\n    console.warn(\"Failed to load product\");\n  }\n};\n\nexport const editProduct = async (product, id, setEditSuccess, setError) => {\n  const url = \"/api/products\" + \"/\" + id;\n  try {\n    const response = await axios.put(url, product);\n    if (response.status === 200) {\n      setEditSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\n\nexport const deleteProductById = async (id, setDeleteSuccess, setError) => {\n  const url = \"/api/products\" + \"/\" + id;\n  try {\n    const response = await axios.delete(url);\n    if (response.status === 200) {\n      setDeleteSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}